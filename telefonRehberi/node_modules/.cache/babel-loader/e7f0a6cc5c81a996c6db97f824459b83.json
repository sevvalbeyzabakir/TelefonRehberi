{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\spexco\\\\Desktop\\\\my-movies-master\\\\src\\\\components\\\\App.js\";\nimport React from 'react';\nimport UserList from './UserList';\nimport SearchBar from './SearchBar';\nimport AddUser from './AddUser';\nimport EditUser from './EditUser';\nimport axios from 'axios'; //Single App için routing \n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      searchQuery: \"\"\n    };\n\n    this.deleteUser = async user => {\n      axios.delete(`http://localhost:3002/users/${user.id}`);\n      const newUserList = this.state.users.filter(m => m.id !== user.id);\n      this.setState(state => ({\n        users: newUserList\n      }));\n    };\n\n    this.searchUser = event => {\n      this.setState({\n        searchQuery: event.target.value\n      });\n    };\n\n    this.addUser = async user => {\n      await axios.post(`http://localhost:3002/users/`, user);\n      this.setState(state => ({\n        users: state.users.concat([user])\n      }));\n      this.getUsers();\n    };\n\n    this.editUser = async (id, updatedUser) => {\n      await axios.put(`http://localhost:3002/users/${id}`, updatedUser);\n      this.getUsers();\n    };\n  }\n\n  componentDidMount() {\n    this.getUsers();\n  }\n\n  async getUsers() {\n    const response = await axios.get(\"http://localhost:3002/users\");\n    this.setState({\n      users: response.data\n    });\n  } // DELETE USER\n\n\n  render() {\n    //silinen kaydın id sini almadan filtreleme\n    let filteredUsers = this.state.users.filter(user => {\n      //toLowerCase: büyük küçük harf farketmeden aratması için \n      return user.name.toLowerCase().indexOf(this.state.searchQuery.toLowerCase()) !== -1;\n    } //en son girilenin en başa gelmesi için\n    ).sort((a, b) => {\n      return a.id < b.id ? 1 : a.id > b.id ? -1 : 0;\n    });\n    return (\n      /*#__PURE__*/\n      // Router--> url deki değişimleri inceleyerek ilgili ekrana yönlendiriyor\n      React.createElement(Router, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        path: \"/\",\n        exact: true,\n        render: () =>\n        /*#__PURE__*/\n        //JSX yapısında tek bir ana div olması lazım bu yapısı o yüzden kullandım\n        React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-lg-12\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(SearchBar, {\n          searchUserProp: this.searchUser,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 41\n          }\n        }))), /*#__PURE__*/React.createElement(UserList, {\n          users: filteredUsers //bu prop listedeki onClick e verilecek\n          ,\n          deleteUserProp: this.deleteUser,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 33\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/add\",\n        render: ({\n          history\n        }) => /*#__PURE__*/React.createElement(AddUser, {\n          onAddUser: user => {\n            this.addUser(user);\n            history.push(\"/\");\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/edit/:id\",\n        render: props => /*#__PURE__*/React.createElement(EditUser, Object.assign({}, props, {\n          onEditUser: (id, user) => {\n            this.editUser(id, user);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }\n      }))))\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/spexco/Desktop/my-movies-master/src/components/App.js"],"names":["React","UserList","SearchBar","AddUser","EditUser","axios","BrowserRouter","Router","Switch","Route","App","Component","state","users","searchQuery","deleteUser","user","delete","id","newUserList","filter","m","setState","searchUser","event","target","value","addUser","post","concat","getUsers","editUser","updatedUser","put","componentDidMount","response","get","data","render","filteredUsers","name","toLowerCase","indexOf","sort","a","b","history","push","props"],"mappings":"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","sourcesContent":["import React from 'react';\nimport UserList from './UserList';\nimport SearchBar from './SearchBar';\nimport AddUser from './AddUser';\nimport EditUser from './EditUser';\nimport axios from 'axios';\n//Single App için routing \nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nclass App extends React.Component {\n\n    state = {\n        users: [],\n        searchQuery: \"\",\n    }\n\n    componentDidMount() {\n        this.getUsers();\n    }\n\n    async getUsers() {\n        const response = await axios.get(\"http://localhost:3002/users\");\n        this.setState({ users: response.data })\n    }\n\n    // DELETE USER\n    deleteUser = async (user) => {\n\n        axios.delete(`http://localhost:3002/users/${user.id}`)\n        const newUserList = this.state.users.filter(\n            m => m.id !== user.id\n        );\n        this.setState(state => ({\n            users: newUserList\n        }))\n    }\n\n    // SEARCH USER\n    searchUser = (event) => {\n        this.setState({ searchQuery: event.target.value })\n    }\n\n    // ADD USER\n    addUser = async (user) => {\n        await axios.post(`http://localhost:3002/users/`, user)\n        this.setState(state => ({\n            users: state.users.concat([user])\n        }))\n\n        this.getUsers();\n    }\n\n    // EDIT USER\n    editUser = async (id, updatedUser) => {\n        await axios.put(`http://localhost:3002/users/${id}`, updatedUser)\n        this.getUsers();\n    }\n\n    render() {\n\n        //silinen kaydın id sini almadan filtreleme\n        let filteredUsers = this.state.users.filter(\n            (user) => {\n                //toLowerCase: büyük küçük harf farketmeden aratması için \n                return user.name.toLowerCase().indexOf(this.state.searchQuery.toLowerCase()) !== -1\n            }\n            //en son girilenin en başa gelmesi için\n        ).sort((a, b) => {\n            return a.id < b.id ? 1 : a.id > b.id ? -1 : 0;\n        });       \n\n        return (\n            // Router--> url deki değişimleri inceleyerek ilgili ekrana yönlendiriyor\n            <Router> \n                <div className=\"container\">\n\n                    <Switch>\n                        {/* patch=\"/\" ilk açıldığında gözükenler  \n                        eaxt yazmasaydım hepsinde / bu olduğu için /add de de search ve list i gösterecekti*/}\n                        <Route path=\"/\" exact render={() => (\n                            //JSX yapısında tek bir ana div olması lazım bu yapısı o yüzden kullandım\n                            <React.Fragment>\n                                <div className=\"row\">\n                                    <div className=\"col-lg-12\">\n                                        <SearchBar searchUserProp={this.searchUser} />\n                                    </div>\n                                </div>\n\n                                <UserList\n                                    users= {filteredUsers}\n                                    //bu prop listedeki onClick e verilecek\n                                    deleteUserProp={this.deleteUser}\n                                /> \n                            </React.Fragment>\n                            )}>\n\n                        </Route>\n\n                        {/* ekle dediğimde olaşacak link \n                        history--> gittiğimiz linklerin saklandığı yer\n                        push-->film eklendikten sonra ana sayfaya(/) dönsün*/}\n                        <Route path=\"/add\" render={({ history }) => (\n                            <AddUser\n                                onAddUser={(user) => {\n                                    this.addUser(user)\n                                    history.push(\"/\")\n                                }\n                                }\n                            />\n                            )}>\n\n                        </Route>\n\n                        {/* edit dediğimde olaşacak link */}\n                        <Route path=\"/edit/:id\" render={(props) => (\n                            <EditUser\n                                {...props}\n                                onEditUser={(id, user) => {\n                                    this.editUser(id, user)\n                                }\n                                }\n                            />\n                            )}>\n                        </Route>\n                    </Switch>\n                </div>\n            </Router>\n        )\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}